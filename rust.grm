(* rust.yacc *)
open DataTypes
fun yaccLog(msg) = ErrorMsg.yaccLog (msg)

%%
%term EOF
    | AS | BREAK | CONST | CONTINUE | CRATE | ELSE | ENUM | EXTERN     
        | FALSE | FN | FOR | IF | IMPL | IN | LET | LOOP | MATCH | MOD | MOVE
        | MUT | PUB | REF | RETURN | SELFVALUE | SELFTYPE | STATIC | STRUCT 
        | SUPER | TRAIT | TRUE | TYPE | UNSAFE | USE | WHERE | WHILE | DYN
    | ABSTRACT | BECOME | BOX | DO | FINAL | MACRO | OVERRIDE
        | PRIV | TYPEOF | UNSIZED | VIRTUAL | YIELD
        | ASYNC | AWAIT | TRY
    | UNION | STATICLIFETIME
    | IDENT of string
    | CHAR_LIT of int 
        | STR_LIT of string | RAW_STR_LIT of string
        | BYTE_LIT of int | BYTE_STR_LIT of string | RAW_BYTE_STR_LIT of string
        | INTEGER_LIT of LargeInt.int | TUPLE_INDEX of int 
        | FLOAT_LIT of real
    | LIFETIME of string
    | PLUS | MINUS | STAR | SLASH | PERCENT | CARET
        | NOT | AND | OR | ANDAND | OROR | SHL | SHR
        | PLUSEQ | MINUSEQ | STAREQ | SLASHEQ | PERCENTEQ | CARETEQ | ANDEQ | OREQ
        | SHLEQ | SHREQ | EQ | EQEQ
        | NE | GT | LT | GE | LE
        | AT | UNDERSCORE | DOT | DOTDOT | DOTDOTDOT | DOTDOTEQ
        | COMMA | SEMI | COLON | PATHSEP | RARROW | FATARROW | POUND | DOLLAR | QUESTION
        | LBRACE | RBRACE | LBRACKET | RBRACKET | LPARENT | RPARENT
        | INNER_DOC_COMMENT of string | OUTER_DOC_COMMENT of string
        | SHEBANG | SHEBANG_LINE of string
        | LOWER_THAN_LPARENT
%nonterm crate of Crate | inner_attrs of InnerAttribute list | items of Item list
        | outer_attrs of OuterAttribute list
        | inner_attr of InnerAttribute | outer_attr of OuterAttribute | meta_item of MetaItem 
        | meta_seq of MetaSeq | meta_seq_expansion of MetaItemInner list | meta_item_inner of MetaItemInner 
        | lit_exp of LiteralExpression
        | path | simple_path of SimplePath | simple_path_segment of string | simple_path_expansion of string list
        | exp | program
        | item of Item | vis_item of VisItem | macro_item of MarcoItem
        | visibility of Visibility | item_type of ItemType
%pos int
%eop EOF
%noshift EOF
%name Rust
%keyword AS BREAK CONST CONTINUE CRATE ELSE ENUM EXTERN
        FALSE FN FOR IF IMPL IN LET LOOP MATCH MOD MOVE
        MUT PUB REF RETURN SELFVALUE SELFTYPE STATIC STRUCT
        SUPER TRAIT TRUE TYPE UNSAFE USE WHERE WHILE
        ABSTRACT BECOME BOX DO FINAL MACRO OVERRIDE
        PRIV TYPEOF UNSIZED VIRTUAL YIELD

%nonassoc LOWER_THAN_LPARENT
%nonassoc LPARENT
%verbose

%%
crate: SHEBANG_LINE inner_attrs items                          (Crate (Shebang (SOME SHEBANG_LINE), inner_attrs, items))
        | inner_attrs items                                    (Crate (Shebang (NONE), inner_attrs, items))

items: item items                                              (item::items)
        |                                                      ([])

item: outer_attrs vis_item                                      (VisItemType (outer_attrs, vis_item))
        (* | macro_item                                            (MarcoItemType (macro_item)) *)

vis_item: item_type                                             (VisItem(NONE, item_type))
        | visibility item_type                                  (VisItem(SOME(visibility), item_type))

visibility: PUB                                                 (DefaultVis)
        | PUB LPARENT CARET RPARENT                             (CrateVis)
        | PUB LPARENT SELFVALUE RPARENT                         (SelfVis)
        | PUB LPARENT SUPER RPARENT                             (SuperVis)
        | PUB LPARENT IN simple_path RPARENT                    (InVis (simple_path))

item_type:ANDAND                                                      (Function)

macro_item:                                                     (MarcoItem)

inner_attrs: inner_attr inner_attrs                             (yaccLog("inner_attrs"); inner_attr::inner_attrs)
            |                                                   ([])
outer_attrs: outer_attr outer_attrs                             (yaccLog("outer_attrs"); outer_attr::outer_attrs)
            |                                                   ([])

inner_attr: SHEBANG LBRACKET meta_item RBRACKET                 (yaccLog("inner_attr"); InnerAttribute(meta_item))
outer_attr: POUND LBRACKET meta_item RBRACKET                   (OuterAttribute meta_item)

meta_item: simple_path EQ lit_exp                               (AttrKVPair(simple_path, lit_exp))
        | simple_path LPARENT meta_seq RPARENT                  (AttrSubs(simple_path, SOME(meta_seq)))
        | simple_path LPARENT RPARENT                           (AttrSubs(simple_path, NONE))
        | simple_path %prec LOWER_THAN_LPARENT                  (AttrName simple_path)

meta_seq: meta_item_inner meta_seq_expansion COMMA              (MetaSeq(meta_item_inner::meta_seq_expansion))
            | meta_item_inner meta_seq_expansion                (MetaSeq(meta_item_inner::meta_seq_expansion))
            
meta_seq_expansion: LPARENT COMMA meta_item_inner RPARENT
                    meta_seq_expansion                          (meta_item_inner::meta_seq_expansion)
                    |                                           ([])
meta_item_inner: meta_item                                      (MetaItem(meta_item))
                | lit_exp                                       (MetaLit(lit_exp))

lit_exp:STR_LIT                                                 (yaccLog("lit_exp "^STR_LIT); LiteralExpression(STR_LIT))

simple_path: PATHSEP simple_path_segment simple_path_expansion  (SimplePath(simple_path_segment::simple_path_expansion))
            | simple_path_segment simple_path_expansion         (SimplePath(simple_path_segment::simple_path_expansion))
simple_path_expansion: PATHSEP simple_path_segment 
                        simple_path_expansion                   (simple_path_segment::simple_path_expansion)
                    |                                           ([])
simple_path_segment: IDENT                                      (IDENT)
                    | SUPER                                     ("super")
                    | SELFVALUE                                 ("self")
                    | CARET                                     ("crate")
                    | DOLLAR CARET                              ("$crate")